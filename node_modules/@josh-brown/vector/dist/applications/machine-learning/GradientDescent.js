"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Learns an optimal set of parameters `theta` using gradient descent
 *
 * @param parameters - The {@link GradientDescentParameters} which determine how the learning will run
 *
 * @public
 */
function gradientDescent(parameters) {
    var _a = parameters.alpha, alpha = _a === void 0 ? 0.1 : _a, _b = parameters.maxIterations, maxIterations = _b === void 0 ? 10000 : _b;
    return function (initialTheta, costFn) {
        var theta = initialTheta;
        var i = 0;
        var zeros = theta.builder().zeros(theta.getDimension());
        while (i < maxIterations) {
            var gradient = costFn(theta).gradient;
            theta = theta.add(gradient.scalarMultiply(-alpha));
            if (gradient.equals(zeros))
                break;
            i++;
        }
        return theta;
    };
}
exports.gradientDescent = gradientDescent;
//# sourceMappingURL=GradientDescent.js.map