"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var NumberUtilities_1 = require("../../utilities/NumberUtilities");
var ScalarOperations_1 = require("./ScalarOperations");
var prettyPrint_1 = require("../../utilities/prettyPrint");
/**
 * Implements the basic {@link ScalarOperations} on `number`s
 * @public
 */
var NumberOperations = /** @class */ (function (_super) {
    __extends(NumberOperations, _super);
    function NumberOperations() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * {@inheritdoc ScalarOperations.fromNumber}
     */
    NumberOperations.prototype.fromNumber = function (num) {
        return num;
    };
    /**
     * {@inheritdoc ScalarOperations.add}
     */
    NumberOperations.prototype.add = function (first, second) {
        return first + second;
    };
    /**
     * {@inheritdoc ScalarOperations.conjugate}
     */
    NumberOperations.prototype.conjugate = function (scalar) {
        return scalar;
    };
    /**
     * {@inheritdoc ScalarOperations.getAdditiveIdentity}
     */
    NumberOperations.prototype.getAdditiveIdentity = function () {
        return 0;
    };
    /**
     * {@inheritdoc ScalarOperations.getAdditiveInverse}
     */
    NumberOperations.prototype.getAdditiveInverse = function (x) {
        return -1 * x;
    };
    /**
     * {@inheritdoc ScalarOperations.getMultiplicativeIdentity}
     */
    NumberOperations.prototype.getMultiplicativeIdentity = function () {
        return 1;
    };
    /**
     * {@inheritdoc ScalarOperations.getMultiplicativeInverse}
     */
    NumberOperations.prototype.getMultiplicativeInverse = function (x) {
        if (x === 0) {
            return undefined;
        }
        return 1 / x;
    };
    /**
     * {@inheritdoc ScalarOperations.getPrincipalSquareRoot}
     */
    NumberOperations.prototype.getPrincipalSquareRoot = function (x) {
        if (x < 0)
            return undefined;
        return Math.sqrt(x);
    };
    /**
     * {@inheritdoc ScalarOperations.norm}
     */
    NumberOperations.prototype.norm = function (x) {
        return Math.abs(x);
    };
    /**
     * {@inheritdoc ScalarOperations.multiply}
     */
    NumberOperations.prototype.multiply = function (first, second) {
        return first * second;
    };
    /**
     * {@inheritdoc ScalarOperations.equals}
     */
    NumberOperations.prototype.equals = function (first, second) {
        return NumberUtilities_1.approximatelyEqual(first, second);
    };
    /**
     * {@inheritdoc ScalarOperations.random}
     */
    NumberOperations.prototype.random = function (min, max) {
        if (min === void 0) { min = 0; }
        if (max === void 0) { max = 1; }
        return NumberUtilities_1.random(min, max);
    };
    /**
     * {@inheritdoc ScalarOperations.randomNormal}
     */
    NumberOperations.prototype.randomNormal = function (mean, standardDeviation) {
        if (mean === void 0) { mean = 0; }
        if (standardDeviation === void 0) { standardDeviation = 1; }
        return NumberUtilities_1.randomNormal(mean, standardDeviation);
    };
    /**
     * {@inheritdoc ScalarOperations.prettyPrint}
     */
    NumberOperations.prototype.prettyPrint = function (x) {
        return prettyPrint_1.prettyPrint(x);
    };
    return NumberOperations;
}(ScalarOperations_1.ScalarOperations));
exports.NumberOperations = NumberOperations;
//# sourceMappingURL=NumberOperations.js.map